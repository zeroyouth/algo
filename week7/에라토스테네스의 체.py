'''
특정한 수의 범위 안에 존재하는 모든 소수를 찾아야 할 때
: 에라토스테네스의 체 알고리즘

- 구체적인 동작과정
1. 2부터 N까지의 모든 자연수 나열
2. 남은 수 중에서 아직 처리하지 않은 가장 작은 수 i를 찾는다.
3. 남은 수 중에서 i의 배수를 모두 제거한다. (i는 제거하지 않음)
4. 더 이상 반복할 수 없을 때까지 2번과 3번 과정 반복

에라토스테네스의 체 알고리즘의 시간 복잡도는
O(NloglogN), but 메모리가 많이 필요

'''

import math

n = 1000
array = [True for i in range(n+1)] # 처음엔 모든 수가 소수인 것으로 초기화

# 에라토스테네스의 체 알고리즘
for i in range(2, int(math.sqrt(n)) + 1): # 약수성질 이용해서 반까지만 보면 됨!
    if array[i] == True: # i가 남은 수일 경우.(소수인 경우)
        j = 2 # i를 제외한 i의 배수 모두 지우기
        while i * j <= n: # 그 곱이 n보다 작거나 같을 경우에만
            array[i * j] = False
            j += 1 # j의 수 하나씩 높이면서 반복적으로 지워줌.

# 모든 소수 출력
for i in range(2, n+1):
    if array[i]: # array배열이 true일 경우에만
        print(i, end=' ') # 해당인덱스 값을 출력해라