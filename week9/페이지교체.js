/*
22-12-26 
출처 : https://www.notion.so/4-193555fef218439bb6f236e2a4f9e18f
문제 : 자리를 양보하며
- 좌석은 3개
- 다리가 아픈 동물들이 순서대로 들어온다.
- 동물 종이 같을 경우 무릎에 앉을 수 있다. (총 7종) 무릎에 앉을경우 (1초)
- 아무도 없거나 자리 꽉차면 가장 최근 한 번도 들어오지 않은 종이 나감 (소요 1분)
- 동물들이 차례대로 들어왔을 때 전체 실행시간 구하기
 */

let 동물 = ['척추동물', '어류', '척추동물', '무척추동물', '파충류', '척추동물', '어류', '파충류'];

function solution(동물, 자리) {
  let 의자 = [];
  let answer = 0;

  for (let 종 of 동물) {
    if (의자.length < 3) { //자리 널널할때
      if (의자.includes(종)) { //같은 종 들어오는 상황 
        의자.splice(의자.indexOf(종), 1);
        의자.push(종);
        answer += 1;
      } else {
        의자.push(종)
        answer += 60;
      }
    } else { //자리 꽉 차있을 때
      if (의자.includes(종)) { //같은 종 들어오는 상황 
        의자.splice(의자.indexOf(종), 1);
        의자.push(종);
        answer += 1;
      } else {
        의자.shift() //맨앞에 있는 동물 뽑아냄
        의자.push(종); //마지막에 동물 넣어줌
        answer += 60;
      }
    }
    console.log(의자);
  }
  return `${parseInt(answer / 60, 10)} 분 ${answer % 60} 초`
}

console.log(solution(동물, 3))

/*
풀이 :
['척추동물', '어류', '척추동물', '무척추동물', '파충류', '척추동물', '어류', '파충류'];
1회 : [ '척추동물' ] #1분
2회 : [ '척추동물', '어류' ] #1분
3회 : [ '어류', '척추동물' ] #같은종HIT 1초(앞에 있는 거 빼서 뒤로 PUSH)
4회 : [ '어류', '척추동물', '무척추동물' ] #1분
5회 : [ '척추동물', '무척추동물', '파충류' ] #자리없음, 맨앞 어류제거, 파충류 PUSH 1분
6회 : [ '무척추동물', '파충류', '척추동물' ] #같은종HIT, 척추동물 빼서 뒤로 PUSH 1초
7회 : [ '파충류', '척추동물', '어류' ] #자리없음, 맨앞 무척추제거, 어류 PUSH 1분
8회 : [ '척추동물', '어류', '파충류' ] #같은종HIT, 파충류 빼서 뒤로 PUSH 1초

소요시간 : 총 5분 3초

⭐ 페이지 교체 알고리즘
- 이 문제는 LRU(Least Resently Used)알고리즘을 사용.-> 페이지 부재시 가장 오랫동안 사용되지 않은 자리 제거
- 가장 오랫동안 사용되지 않은 페이지를 제거하는 방법 말고도, FIFO 방법도 있음 (가장 오랫동안 있었던 페이지를 제거) 
*/
